generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["jsonProtocol"]
}

datasource db {
  provider          = "postgresql"
  url               = env("POSTGRES_PRISMA_URL")
  directUrl         = env("POSTGRES_URL_NON_POOLING")
  shadowDatabaseUrl = env("POSTGRES_URL_NON_POOLING")
}

model Account {
  id                 String  @id @default(cuid())
  userId             String  @map("user_id")
  type               String
  provider           String
  providerAccountId  String  @map("provider_account_id")
  refresh_token      String?
  access_token       String?
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?
  session_state      String?
  oauth_token_secret String?
  oauth_token        String?
  user               User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique @map("session_token")
  userId       String   @map("user_id")
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("sessions")
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  isActive      Boolean   @default(false)
  stripeId      String?
  phone         String?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  accounts      Account[]
  sessions      Session[]

  @@map("users")
}

model VerificationToken {
  id         Int      @id @default(autoincrement())
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
  @@map("tokens")
}

model Plaid {
  id           Int    @id @default(autoincrement())
  access_token String @unique
  item_id      String @unique
  user_id      String @map("user_id")
  cursor       String?

  @@map("plaid")
}

model Accounts {
  id            Int      @id @default(autoincrement())
  account_id    String?  @unique
  balances      Json?
  name          String?
  official_name String?
  subtype       String?
  type          String?
  user_id       String   @map("user_id")
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  access_token  String?
  item_id       String?
  active        Boolean? @default(true)

  @@map("accounts")
}

model Transactions {
  id                String    @id @default(cuid())
  account_id        String?
  name              String?
  merchant_name     String?
  payment_channel   String?
  transaction_id    String    @unique
  detailed_category String?
  location          Json?
  pending           Boolean?  @default(false)
  primary_category  String?
  user_id           String    @map("user_id")
  createdAt         DateTime? @default(now())
  updatedAt         DateTime? @updatedAt
  authorized_date   String?
  item_id           String?
  date              DateTime?
  amount            Decimal?  @db.Decimal(9, 2)
  category          Json?
  active            Boolean? @default(true)

  @@map("transactions")
}
