generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["jsonProtocol"]
}

datasource db {
  provider          = "postgresql"
  url               = env("POSTGRES_PRISMA_URL")
  directUrl         = env("POSTGRES_URL_NON_POOLING")
  shadowDatabaseUrl = env("POSTGRES_URL_NON_POOLING")
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique @map("session_token")
  userId       String   @map("user_id")
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("sessions")
}

model User {
  id                   String         @id @default(cuid())
  name                 String?
  email                String?        @unique
  emailVerified        DateTime?
  image                String?
  phone                String?
  createdAt            DateTime       @default(now())
  updatedAt            DateTime       @updatedAt
  active               Boolean        @default(false)
  subscribed           Boolean        @default(false)
  linkedUserId         String?
  stripeCustomerId     String?
  stripeSubscriptionId String?
  sessions             Session[]
  Transactions         Transactions[]

  @@map("users")
}

model VerificationToken {
  id         Int      @id @default(autoincrement())
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
  @@map("tokens")
}

model Plaid {
  id           String   @id @default(cuid())
  access_token String   @unique
  item_id      String?  @unique
  user_id      String?  @map("user_id")
  active       Boolean? @default(true)
  cursor       String?

  @@map("plaid")
}

model Accounts {
  id            Int            @id @default(autoincrement())
  account_id    String?        @unique
  balances      Json?
  name          String?
  official_name String?
  subtype       String?
  type          String?
  user_id       String?        @map("user_id")
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
  access_token  String?
  item_id       String?
  active        Boolean?       @default(true)
  Transactions  Transactions[]

  @@map("accounts")
}

model Transactions {
  id                String    @id @default(cuid())
  account_id        String?
  name              String?
  merchant_name     String?
  payment_channel   String?
  transaction_id    String?   @unique
  detailed_category String?
  location          Json?
  primary_category  String?
  user_id           String?   @map("user_id")
  item_id           String?
  date              String?
  amount            Decimal?  @db.Decimal(9, 2)
  active            Boolean?  @default(true)
  category          Json?
  authorized_date   DateTime?
  month_year        String?
  week_year         String?
  recurring         Boolean   @default(false)
  unified           String?   @default("1f4b8")
  notes             String?
  type              String?
  alert_date        DateTime?
  createdAt         DateTime? @default(now())
  updatedAt         DateTime? @updatedAt
  account           Accounts? @relation(fields: [account_id], references: [account_id])
  user              User?     @relation(fields: [user_id], references: [id])

  @@map("transactions")
}

model LinkTokens {
  id          String    @id @default(cuid())
  user_id     String?   @map("user_id")
  access_code String?   @unique
  expires     DateTime?
  from_email  String?
  to_email    String?

  @@map("link_tokens")
}
