generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["jsonProtocol"]
}

datasource db {
  provider          = "postgresql"
  url               = env("POSTGRES_PRISMA_URL")
  directUrl         = env("POSTGRES_URL_NON_POOLING")
  shadowDatabaseUrl = env("POSTGRES_URL_NON_POOLING")
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique @map("session_token")
  userId       String   @map("user_id")
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("sessions")
}

model User {
  id              String         @id @default(cuid())
  name            String?
  email           String?        @unique
  emailVerified   DateTime?
  image           String?
  phone           String?
  createdAt       DateTime       @default(now())
  updatedAt       DateTime       @updatedAt
  active          Boolean        @default(false)
  subscribed      Boolean        @default(false)
  linked_user_id  String?
  subscription_id String?
  sessions        Session[]
  Transactions    Transactions[]

  @@map("users")
}

model VerificationToken {
  id         Int      @id @default(autoincrement())
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
  @@map("tokens")
}

model Plaid {
  id              String   @id @default(cuid())
  access_token    String   @unique
  item_id         String?  @unique @map("item_id")
  user_id         String?  @map("user_id")
  active          Boolean? @default(true)
  cursor          String?
  bank_name       String?
  link_session_id String?
  public_token    String?

  @@map("plaid")
}

model Accounts {
  id            Int            @id @default(autoincrement())
  account_id    String?        @unique
  balances      Json?
  name          String?
  official_name String?
  subtype       String?
  type          String?
  user_id       String?        @map("user_id")
  access_token  String?
  item_id       String?
  active        Boolean?       @default(true)
  created_at    DateTime       @default(now())
  updated_at    DateTime       @updatedAt
  bank_name     String?
  Transactions  Transactions[]

  @@map("accounts")
}

model Transactions {
  id                String    @id @default(cuid())
  account_id        String?
  name              String?
  merchant_name     String?
  transaction_id    String?   @unique
  detailed_category String?
  location          Json?
  primary_category  String?
  user_id           String?   @map("user_id")
  item_id           String?
  date              String?
  amount            Decimal?  @db.Decimal(9, 2)
  active            Boolean?  @default(true)
  category          Json?
  authorized_date   DateTime?
  month_year        String?
  week_year         String?
  recurring         Boolean   @default(false)
  unified           String?   @default("1f4b8")
  notes             String?
  alert_date        DateTime?
  created_at        DateTime? @default(now())
  updated_at        DateTime? @updatedAt
  account           Accounts? @relation(fields: [account_id], references: [account_id])
  user              User?     @relation(fields: [user_id], references: [id])

  @@map("transactions")
}

model LinkTokens {
  id          String    @id @default(cuid())
  user_id     String?   @map("user_id")
  access_code String?   @unique
  expires     DateTime?
  from_email  String?
  to_email    String?
  created_at  DateTime? @default(now())
  updated_at  DateTime? @updatedAt

  @@map("link_tokens")
}

model Subscriptions {
  id                   String  @id @default(cuid())
  customer             String?
  subscription         String? @unique
  canceled_at          String?
  cancel_at            String?
  current_period_end   String?
  current_period_start String?
  ended_at             String?
  start_date           String?
  status               String?
  trial_end            String?
  user_id              String? @map("user_id")

  @@map("subscriptions")
}
